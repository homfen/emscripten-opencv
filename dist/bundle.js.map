{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","Module","onRuntimeInitialized","console","log","init","range","Array","from","keys","inset","x","y","w","h","dx","dy","reset","canvas","document","getElementById","getContext","clearRect","width","height","cellsElement","firstChild","removeChild","onChangeSudoku","e","inputImage","src","target","selectedOptions","alt","label","inputImageOverlay","onProcessImage","processImage","data","img","createElement","ctx","drawImage","getImageData","addr","returnDataAddr","HEAP32","BYTES_PER_ELEMENT","returnData","slice","bbx","bby","bbw","bbh","outImageWidth","outImageHeight","outImageChannels","outImageAddr","boundingBox","JSON","stringify","outImageDataSize","outImageData","HEAPU8","imageData","array","Uint8ClampedArray","forEach","pixelValue","index","base","ImageData","imageDataFrom1Channel","imageDataFrom4Channels","putImageData","drawOutputImage","strokeStyle","lineWidth","strokeRect","drawBoundingBox","cellw","cellh","row","celly","cellx","cellCanvas","setAttribute","appendChild","cropCells","_free","inputImagesElement","sudokuNumber","optionElement","innerText","addEventListener","cwrap","wrapProcessImage"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","window.Module = {\n  onRuntimeInitialized: () => {\n    console.log('[onRuntimeInitialized]')\n    init(Module) // eslint-disable-line no-undef\n  }\n}\n\nconst range = n =>\n  Array.from(Array(n).keys())\n\nexport const inset = (x, y, w, h, dx, dy) =>\n  [x + dx, y + dy, w - 2 * dx, h - 2 * dy]\n\nconst getImageData = () => {\n  console.log('[getImageData]')\n  const img = document.getElementById('input-image')\n  const canvas = document.createElement('canvas')\n  canvas.width = img.width\n  canvas.height = img.height\n  const ctx = canvas.getContext('2d')\n  ctx.drawImage(img, 0, 0, img.width, img.height)\n  const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height)\n  return imageData\n}\n\nconst imageDataFrom1Channel = (data, width, height) => {\n  console.log('[imageDataFrom1Channel]')\n  const cb = width * height * 4\n  const array = new Uint8ClampedArray(cb)\n  data.forEach((pixelValue, index) => {\n    const base = index * 4\n    array[base] = pixelValue\n    array[base + 1] = pixelValue\n    array[base + 2] = pixelValue\n    array[base + 3] = 255\n  })\n  const imageData = new ImageData(array, width, height)\n  return imageData\n}\n\nconst imageDataFrom4Channels = (data, width, height) => {\n  console.log('[imageDataFrom4Channels]')\n  const array = new Uint8ClampedArray(data)\n  const imageData = new ImageData(array, width, height)\n  return imageData\n}\n\nconst drawOutputImage = imageData => {\n  console.log('[drawOutputImage]')\n  const canvas = document.getElementById('output-image')\n  canvas.width = imageData.width\n  canvas.height = imageData.height\n  const ctx = canvas.getContext('2d')\n  ctx.putImageData(imageData, 0, 0)\n}\n\nconst drawBoundingBox = boundingBox => {\n  console.log('[drawBoundingBox]')\n  const canvas = document.getElementById('input-image-overlay')\n  const ctx = canvas.getContext('2d')\n  ctx.strokeStyle = 'red'\n  ctx.lineWidth = 2\n  ctx.strokeRect(...inset(...boundingBox, 2, 2))\n}\n\nconst cropCells = (imageData, boundingBox) => {\n  console.log('[cropCells]')\n\n  const img = document.getElementById('input-image')\n  const canvas = document.createElement('canvas')\n  canvas.width = img.width\n  canvas.height = img.height\n  const ctx = canvas.getContext('2d')\n  ctx.drawImage(img, 0, 0, img.width, img.height)\n\n  const cellsElement = document.getElementById('cells')\n\n  const [bbx, bby, bbw, bbh] = inset(...boundingBox, 2, 2)\n  const cellw = bbw / 9\n  const cellh = bbh / 9\n  for (const y of range(9)) {\n    const row = document.createElement('div')\n    const celly = bby + y * cellh\n    for (const x of range(9)) {\n      const cellx = bbx + x * cellw\n      const imageData = ctx.getImageData(...inset(cellx, celly, cellw, cellh, 2, 2))\n      const cellCanvas = document.createElement('canvas')\n      cellCanvas.setAttribute('class', 'cell')\n      cellCanvas.width = imageData.width\n      cellCanvas.height = imageData.height\n      cellCanvas.getContext('2d').putImageData(imageData, 0, 0)\n      row.appendChild(cellCanvas)\n    }\n    cellsElement.appendChild(row)\n  }\n}\n\nconst reset = () => {\n  const canvas = document.getElementById('output-image')\n  const ctx = canvas.getContext('2d')\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n  const cellsElement = document.getElementById('cells')\n  while (cellsElement.firstChild) {\n    cellsElement.removeChild(cellsElement.firstChild)\n  }\n}\n\nconst onChangeSudoku = e => {\n  console.log('[onChangeSudoku]')\n  const inputImage = document.getElementById('input-image')\n  inputImage.src = e.target.selectedOptions[0].value\n  inputImage.alt = e.target.selectedOptions[0].label\n  const inputImageOverlay = document.getElementById('input-image-overlay')\n  inputImageOverlay.width = inputImage.width\n  inputImageOverlay.height = inputImage.height\n  reset()\n}\n\nconst onProcessImage = (module, processImage) => () => {\n  console.log('[onProcessImage]')\n  reset()\n  const { data, width, height } = getImageData()\n  const addr = processImage(data, width, height)\n  const returnDataAddr = addr / module.HEAP32.BYTES_PER_ELEMENT\n  const returnData = module.HEAP32.slice(returnDataAddr, returnDataAddr + 8)\n  const [bbx, bby, bbw, bbh, outImageWidth, outImageHeight, outImageChannels, outImageAddr] = returnData\n  const boundingBox = [bbx, bby, bbw, bbh]\n  console.log(JSON.stringify(boundingBox))\n  console.log(JSON.stringify([outImageWidth, outImageHeight, outImageChannels, outImageAddr]))\n  const outImageDataSize = outImageWidth * outImageHeight * outImageChannels\n  const outImageData = module.HEAPU8.slice(outImageAddr, outImageAddr + outImageDataSize)\n  const imageData = outImageChannels === 1\n    ? imageDataFrom1Channel(outImageData, outImageWidth, outImageHeight)\n    : imageDataFrom4Channels(outImageData, outImageWidth, outImageHeight)\n  drawOutputImage(imageData)\n  drawBoundingBox(boundingBox)\n  cropCells(imageData, boundingBox)\n  module._free(addr)\n}\n\nconst wrapProcessImage = module => {\n  console.log('[wrapProcessImage]')\n  const ident = 'processImage'\n  const returnType = 'number'\n  const argTypes = ['array', 'number', 'number']\n  const processImage = module.cwrap(ident, returnType, argTypes)\n  return processImage\n}\n\nconst init = module => {\n  console.log('[init]')\n  const inputImagesElement = document.getElementById('input-images')\n  range(2).forEach(index => {\n    const sudokuNumber = index + 1\n    const value = `/images/sudoku-${sudokuNumber}.png`\n    const label = `Sudoku ${sudokuNumber}`\n    const optionElement = document.createElement('option')\n    optionElement.setAttribute('value', value)\n    optionElement.innerText = label\n    inputImagesElement.appendChild(optionElement)\n  })\n  inputImagesElement.addEventListener('change', onChangeSudoku)\n  const processImage = wrapProcessImage(module)\n  const processImageBtn = document.getElementById('process-image-btn')\n  processImageBtn.addEventListener('click', onProcessImage(module, processImage))\n  const inputImage = document.getElementById('input-image')\n  const inputImageOverlay = document.getElementById('input-image-overlay')\n  inputImageOverlay.width = inputImage.width\n  inputImageOverlay.height = inputImage.height\n}\n"],"sourceRoot":""}