{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","Module","onRuntimeInitialized","console","log","init","range","Array","from","keys","inset","x","y","w","h","dx","dy","clearCanvas","canvasId","canvas","document","getElementById","getContext","clearRect","width","height","reset","cellsElement","firstChild","removeChild","loadInputImage","async","imageUrl","options","index","image","Image","Promise","resolve","onload","src","drawImage","inputImageOverlay","onChangeSudoku","e","target","selectedIndex","onProcessImage","processImage","data","getImageData","addr","returnDataAddr","HEAP32","BYTES_PER_ELEMENT","returnData","slice","bbx","bby","bbw","bbh","outImage1Width","outImage1Height","outImage1Channels","outImage1Addr","outImage2Width","outImage2Height","outImage2Channels","outImage2Addr","boundingBox","JSON","stringify","corners","map","cornerIndex","dir","outImage1DataSize","outImage1Data","HEAPU8","imageData1","array","Uint8ClampedArray","forEach","pixelValue","base","ImageData","imageDataFrom1Channel","imageDataFrom4Channels","imageData","putImageData","outputImageOverlay","drawOutputImage","ctx","strokeStyle","lineWidth","strokeRect","drawBoundingBox","path","Path2D","moveTo","corner","lineTo","closePath","stroke","drawCorners","cellw","cellh","row","createElement","celly","cellx","cellCanvas","setAttribute","appendChild","cropCells","_free","inputImagesElement","sudokuNumber","label","optionElement","innerText","addEventListener","cwrap","wrapProcessImage"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","window.Module = {\n  onRuntimeInitialized: () => {\n    console.log('[onRuntimeInitialized]')\n    init(Module) // eslint-disable-line no-undef\n  }\n}\n\nconst range = n =>\n  Array.from(Array(n).keys())\n\nexport const inset = (x, y, w, h, dx, dy) =>\n  [x + dx, y + dy, w - 2 * dx, h - 2 * dy]\n\nconst getImageData = () => {\n  console.log('[getImageData]')\n  const canvas = document.getElementById('input-image')\n  const ctx = canvas.getContext('2d')\n  const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height)\n  return imageData\n}\n\nconst imageDataFrom1Channel = (data, width, height) => {\n  console.log('[imageDataFrom1Channel]')\n  const cb = width * height * 4\n  const array = new Uint8ClampedArray(cb)\n  data.forEach((pixelValue, index) => {\n    const base = index * 4\n    array[base] = pixelValue\n    array[base + 1] = pixelValue\n    array[base + 2] = pixelValue\n    array[base + 3] = 255\n  })\n  const imageData = new ImageData(array, width, height)\n  return imageData\n}\n\nconst imageDataFrom4Channels = (data, width, height) => {\n  console.log('[imageDataFrom4Channels]')\n  const array = new Uint8ClampedArray(data)\n  const imageData = new ImageData(array, width, height)\n  return imageData\n}\n\nconst drawOutputImage = imageData => {\n  console.log('[drawOutputImage]')\n  const canvas = document.getElementById('output-image')\n  canvas.width = imageData.width\n  canvas.height = imageData.height\n  const ctx = canvas.getContext('2d')\n  ctx.putImageData(imageData, 0, 0)\n  const outputImageOverlay = document.getElementById('output-image-overlay')\n  outputImageOverlay.width = imageData.width\n  outputImageOverlay.height = imageData.height\n}\n\nconst drawBoundingBox = (boundingBox, canvasId) => {\n  console.log('[drawBoundingBox]')\n  const canvas = document.getElementById(canvasId)\n  const ctx = canvas.getContext('2d')\n  ctx.strokeStyle = 'red'\n  ctx.lineWidth = 1\n  ctx.strokeRect(...inset(...boundingBox, 2, 2))\n}\n\nconst drawCorners = (corners, canvasId) => {\n  console.log('[drawCorners]')\n  const canvas = document.getElementById(canvasId)\n  const ctx = canvas.getContext('2d')\n  ctx.strokeStyle = 'magenta'\n  ctx.lineWidth = 1\n  const path = new Path2D()\n  path.moveTo(corners[0].x, corners[0].y)\n  corners.slice(1).forEach(corner => {\n    path.lineTo(corner.x, corner.y)\n  })\n  path.closePath()\n  ctx.stroke(path)\n}\n\nconst cropCells = (imageData, boundingBox) => {\n  console.log('[cropCells]')\n\n  const canvas = document.getElementById('output-image')\n  const ctx = canvas.getContext('2d')\n\n  const cellsElement = document.getElementById('cells')\n\n  const [bbx, bby, bbw, bbh] = inset(...boundingBox, 2, 2)\n  const cellw = bbw / 9\n  const cellh = bbh / 9\n  for (const y of range(9)) {\n    const row = document.createElement('div')\n    const celly = bby + y * cellh\n    for (const x of range(9)) {\n      const cellx = bbx + x * cellw\n      const imageData = ctx.getImageData(...inset(cellx, celly, cellw, cellh, 2, 2))\n      const cellCanvas = document.createElement('canvas')\n      cellCanvas.setAttribute('class', 'cell')\n      cellCanvas.width = imageData.width\n      cellCanvas.height = imageData.height\n      cellCanvas.getContext('2d').putImageData(imageData, 0, 0)\n      row.appendChild(cellCanvas)\n    }\n    cellsElement.appendChild(row)\n  }\n}\n\nconst clearCanvas = canvasId => {\n  const canvas = document.getElementById(canvasId)\n  const ctx = canvas.getContext('2d')\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n}\n\nconst reset = () => {\n  clearCanvas('output-image')\n  clearCanvas('output-image-overlay')\n  const cellsElement = document.getElementById('cells')\n  while (cellsElement.firstChild) {\n    cellsElement.removeChild(cellsElement.firstChild)\n  }\n}\n\nconst loadInputImage = async index => {\n  console.log('[loadInputImage]')\n  const inputImagesElement = document.getElementById('input-images')\n  const imageUrl = inputImagesElement.options[index].value\n  const image = new Image()\n  await new Promise(resolve => {\n    image.onload = resolve\n    image.src = imageUrl\n  })\n  const canvas = document.getElementById('input-image')\n  canvas.width = image.width\n  canvas.height = image.height\n  const ctx = canvas.getContext('2d')\n  ctx.drawImage(image, 0, 0, image.width, image.height)\n  const inputImageOverlay = document.getElementById('input-image-overlay')\n  inputImageOverlay.width = image.width\n  inputImageOverlay.height = image.height\n  reset()\n}\n\nconst onChangeSudoku = e => {\n  console.log('[onChangeSudoku]')\n  loadInputImage(e.target.selectedIndex)\n}\n\nconst onProcessImage = (module, processImage) => () => {\n  console.log('[onProcessImage]')\n  reset()\n  const { data, width, height } = getImageData()\n  const addr = processImage(data, width, height)\n  const returnDataAddr = addr / module.HEAP32.BYTES_PER_ELEMENT\n  const returnData = module.HEAP32.slice(returnDataAddr, returnDataAddr + 20)\n  const [\n    bbx, bby, bbw, bbh,\n    outImage1Width, outImage1Height, outImage1Channels, outImage1Addr,\n    outImage2Width, outImage2Height, outImage2Channels, outImage2Addr\n  ] = returnData\n  const boundingBox = [bbx, bby, bbw, bbh]\n  console.log(JSON.stringify(boundingBox))\n  console.log(JSON.stringify([outImage1Width, outImage1Height, outImage1Channels, outImage1Addr]))\n  console.log(JSON.stringify([outImage2Width, outImage2Height, outImage2Channels, outImage2Addr]))\n  const corners = range(4).map(cornerIndex => ({\n    x: returnData[12 + cornerIndex * 2],\n    y: returnData[12 + cornerIndex * 2 + 1]\n  }))\n  console.dir(corners)\n  const outImage1DataSize = outImage1Width * outImage1Height * outImage1Channels\n  const outImage1Data = module.HEAPU8.slice(outImage1Addr, outImage1Addr + outImage1DataSize)\n  const imageData1 = outImage1Channels === 1\n    ? imageDataFrom1Channel(outImage1Data, outImage1Width, outImage1Height)\n    : imageDataFrom4Channels(outImage1Data, outImage1Width, outImage1Height)\n  // const outImage2DataSize = outImage2Width * outImage2Height * outImage2Channels\n  // const outImage2Data = module.HEAPU8.slice(outImage2Addr, outImage2Addr + outImage2DataSize)\n  // const imageData2 = outImage2Channels === 1\n  //   ? imageDataFrom1Channel(outImage2Data, outImage2Width, outImage2Height)\n  //   : imageDataFrom4Channels(outImage2Data, outImage2Width, outImage2Height)\n  drawOutputImage(imageData1)\n  drawBoundingBox(boundingBox, 'output-image-overlay')\n  drawCorners(corners, 'output-image-overlay')\n  cropCells(imageData1, boundingBox)\n  module._free(addr)\n}\n\nconst wrapProcessImage = module => {\n  console.log('[wrapProcessImage]')\n  const ident = 'processImage'\n  const returnType = 'number'\n  const argTypes = ['array', 'number', 'number']\n  const processImage = module.cwrap(ident, returnType, argTypes)\n  return processImage\n}\n\nconst init = module => {\n  console.log('[init]')\n  const inputImagesElement = document.getElementById('input-images')\n  range(2).forEach(index => {\n    const sudokuNumber = index + 1\n    const value = `/images/sudoku-${sudokuNumber}.png`\n    const label = `Sudoku ${sudokuNumber}`\n    const optionElement = document.createElement('option')\n    optionElement.setAttribute('value', value)\n    optionElement.innerText = label\n    inputImagesElement.appendChild(optionElement)\n  })\n  inputImagesElement.addEventListener('change', onChangeSudoku)\n  loadInputImage(0)\n  const processImage = wrapProcessImage(module)\n  const processImageBtn = document.getElementById('process-image-btn')\n  processImageBtn.addEventListener('click', onProcessImage(module, processImage))\n}\n"],"sourceRoot":""}