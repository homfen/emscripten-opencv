!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t){window.Module={onRuntimeInitialized:()=>{console.log("[onRuntimeInitialized]"),r(Module)}};const n=e=>{console.log("[drawOutputImage]");const t=document.getElementById("output-image");t.width=e.width,t.height=e.height,ctx=t.getContext("2d"),ctx.putImageData(e,0,0)},o=(e,t)=>()=>{console.log("[onProcessImage]");const{data:o,width:r,height:i}=(()=>{console.log("[getImageData]");const e=document.getElementById("input-image"),t=document.createElement("canvas");return t.width=e.width,t.height=e.height,ctx=t.getContext("2d"),ctx.drawImage(e,0,0,e.width,e.height),ctx.getImageData(0,0,t.width,t.height)})(),a=t(o,r,i),c=a/e.HEAP32.BYTES_PER_ELEMENT;returnData=e.HEAP32.slice(c,c+8);const[l,u,d,s,m,f,h,p]=returnData;console.log(JSON.stringify([l,u,d,s])),console.log(JSON.stringify([m,f,h,p]));const y=m*f*h,w=e.HEAPU8.slice(p,p+y);if(1===h){const e=((e,t,n)=>{console.log("[imageDataFrom1Channel]");const o=new Uint8ClampedArray(t*n*4);return e.forEach((e,t)=>{const n=4*t,r=g=b=e;o[n]=r,o[n+1]=g,o[n+2]=b,o[n+3]=255}),new ImageData(o,t,n)})(w,m,f);n(e)}if(4===h){const e=((e,t,n)=>{console.log("[imageDataFrom4Channels]");const o=new Uint8ClampedArray(e);return new ImageData(o,t,n)})(w,m,f);n(e)}((e,t,n,o)=>{console.log("[drawBoundingBox]");const r=document.getElementById("input-image-overlay");ctx=r.getContext("2d"),ctx.strokeStyle="red",ctx.lineWidth=2,ctx.strokeRect(e,t,n,o)})(l,u,d,s),e._free(a)},r=e=>{console.log("[init]");const t=(e=>{console.log("[wrapProcessImage]");return e.cwrap("processImage","number",["array","number","number"])})(e);document.getElementById("process-image-btn").addEventListener("click",o(e,t));const n=document.getElementById("input-image"),r=document.getElementById("input-image-overlay");r.width=n.width,r.height=n.height}}]);
//# sourceMappingURL=bundle.js.map