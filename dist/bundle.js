!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t),n.d(t,"inset",(function(){return r})),window.Module={onRuntimeInitialized:()=>{console.log("[onRuntimeInitialized]"),u(Module)}};const o=e=>Array.from(Array(e).keys()),r=(e,t,n,o,r,i)=>[e+r,t+i,n-2*r,o-2*i],i=e=>{const t=document.getElementById(e);t.getContext("2d").clearRect(0,0,t.width,t.height)},a=()=>{i("output-image"),i("output-image-overlay");const e=document.getElementById("cells");for(;e.firstChild;)e.removeChild(e.firstChild)},l=async e=>{console.log("[loadInputImage]");const t=document.getElementById("input-images").options[e].value,n=new Image;await new Promise(e=>{n.onload=e,n.src=t});const o=document.getElementById("input-image");o.width=n.width,o.height=n.height,o.getContext("2d").drawImage(n,0,0,n.width,n.height);const r=document.getElementById("input-image-overlay");r.width=n.width,r.height=n.height,a()},c=e=>{console.log("[onChangeSudoku]"),l(e.target.selectedIndex)},d=(e,t)=>()=>{console.log("[onProcessImage]"),a();const{data:n,width:i,height:l}=(()=>{console.log("[getImageData]");const e=document.getElementById("input-image");return e.getContext("2d").getImageData(0,0,e.width,e.height)})(),c=t(n,i,l),d=c/e.HEAP32.BYTES_PER_ELEMENT,u=e.HEAP32.slice(d,d+20),[g,s,m,h,p,y,f,I,w,E,v,C]=u,b=[g,s,m,h];console.log(JSON.stringify(b)),console.log(JSON.stringify([p,y,f,I])),console.log(JSON.stringify([w,E,v,C]));const x=o(4).map(e=>({x:u[12+2*e],y:u[12+2*e+1]}));console.dir(x);const B=p*y*f,P=e.HEAPU8.slice(I,I+B),S=1===f?((e,t,n)=>{console.log("[imageDataFrom1Channel]");const o=new Uint8ClampedArray(t*n*4);return e.forEach((e,t)=>{const n=4*t;o[n]=e,o[n+1]=e,o[n+2]=e,o[n+3]=255}),new ImageData(o,t,n)})(P,p,y):((e,t,n)=>{console.log("[imageDataFrom4Channels]");const o=new Uint8ClampedArray(e);return new ImageData(o,t,n)})(P,p,y);(e=>{console.log("[drawOutputImage]");const t=document.getElementById("output-image");t.width=e.width,t.height=e.height,t.getContext("2d").putImageData(e,0,0);const n=document.getElementById("output-image-overlay");n.width=e.width,n.height=e.height})(S),((e,t)=>{console.log("[drawBoundingBox]");const n=document.getElementById(t).getContext("2d");n.strokeStyle="red",n.lineWidth=1,n.strokeRect(...r(...e,2,2))})(b,"output-image-overlay"),((e,t)=>{console.log("[drawCorners]");const n=document.getElementById(t).getContext("2d");n.strokeStyle="magenta",n.lineWidth=1;const o=new Path2D;o.moveTo(e[0].x,e[0].y),e.slice(1).forEach(e=>{o.lineTo(e.x,e.y)}),o.closePath(),n.stroke(o)})(x,"output-image-overlay"),((e,t)=>{console.log("[cropCells]");const n=document.getElementById("output-image").getContext("2d"),i=document.getElementById("cells"),[a,l,c,d]=r(...t,2,2),u=c/9,g=d/9;for(const e of o(9)){const t=document.createElement("div"),c=l+e*g;for(const e of o(9)){const o=a+e*u,i=n.getImageData(...r(o,c,u,g,2,2)),l=document.createElement("canvas");l.setAttribute("class","cell"),l.width=i.width,l.height=i.height,l.getContext("2d").putImageData(i,0,0),t.appendChild(l)}i.appendChild(t)}})(0,b),e._free(c)},u=e=>{console.log("[init]");const t=document.getElementById("input-images");o(2).forEach(e=>{const n=e+1,o=`/images/sudoku-${n}.png`,r=`Sudoku ${n}`,i=document.createElement("option");i.setAttribute("value",o),i.innerText=r,t.appendChild(i)}),t.addEventListener("change",c),l(0);const n=(e=>{console.log("[wrapProcessImage]");return e.cwrap("processImage","number",["array","number","number"])})(e);document.getElementById("process-image-btn").addEventListener("click",d(e,n))}}]);
//# sourceMappingURL=bundle.js.map